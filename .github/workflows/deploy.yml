name: CI/CD Pipeline for Kubernetes Deployment

on:
  push:
    branches:
      - main

env:
  REGISTRY: docker.io
  IMAGE_NAME: ${{ secrets.DOCKER_USERNAME }}/website-ticket

jobs:
  build-and-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout repository
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 3: Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Step 4: Build and push Docker image
      - name: Build and Push Docker Image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest

    deploy:
    name: Deploy to Kubernetes
    runs-on: ubuntu-latest
    needs: build-and-push

    steps:
      # Step 1: Checkout repository
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Install Minikube
      - name: Install Minikube
        run: |
          curl -Lo minikube https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
          chmod +x minikube
          sudo mv minikube /usr/local/bin/
          minikube start --driver=docker

      # Step 3: Set Kubeconfig
      - name: Configure Kubectl
        run: |
          mkdir -p $HOME/.kube
          mkdir -p $HOME/.minikube
          sudo cp -r /root/.kube /home/runner/.kube || true
          sudo cp -r /root/.minikube /home/runner/.minikube || true
          sudo chown -R runner:runner /home/runner/.kube /home/runner/.minikube
          export KUBECONFIG=/home/runner/.kube/config
          kubectl config use-context minikube

      # Step 4: Deploy to Kubernetes
      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f deployment.yml

      # Step 5: Verify Deployment
      - name: Verify Deployment
        run: |
          kubectl rollout status deployment/website-ticket

